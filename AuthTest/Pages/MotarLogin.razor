@page "/"
@inject NavigationManager NavManager

<h1><a href="@MotarApi">Click for Motar Login</a></h1>

<p>This is a test page for the QVX desktop app</p>





@*<button type="button" onclick="@MotarAuth()">Get Token</button>*@

@code {

    private Models.Login model = new Models.Login();
    private string MotarApi = "https://sandbox.motar.io/oauth/signin?response_type=code" +
        "&client_id=iok-cid-1f4b249e90ac6cae2ce6a01480e27241db659767d1e99de5" +
        "&redirect_uri=https://qvxauth.azurewebsites.net/motarlogin&state=NONCE";

    private string vxapi = "https://dev-api.quantuminterface.com/v1/auth/motar-code/";

    private string motarres = "";
    private string vxres = "";

    protected override async Task OnInitializedAsync()
    {

        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        Console.WriteLine($"Console- Initialize");
        
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var motarcode))
        {

            motarres = motarcode.ToString();

            Console.WriteLine($"The response is {motarres}");
            
            WebClient client = new WebClient();

            JObject json = new JObject();
            json.Add("code", motarres);

            vxres = await client.sendPost(vxapi, JsonConvert.SerializeObject(json));

            Console.WriteLine($"Token from VxApi is {vxres}");

            //Next step is to wrap this token with a Quantum Token and then you can 
            //query both clouds.
        }
    }

    protected async Task MotarAuth()
    {
       
    }


}
