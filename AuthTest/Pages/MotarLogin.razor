@page "/motarlogin"
@inject NavigationManager NavManager

<h1>Motar Login</h1>

<p>This is a test app for the QVX desktop app</p>
<p>User = happyleopard183</p>

<a href="@MotarApi">Motar</a>
<EditForm Model="@model">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText placeholder="UserName" @bind-Value="@model.user"></InputText>
    <InputText type="password" placeholder="Password" @bind-Value="@model.password" />
    <p>
        <InputTextArea placeholder="Motar code" @bind-Value="@motarres"></InputTextArea>
    </p>
    <p>
        <InputTextArea placeholder="VX Token" @bind-Value="@vxres"></InputTextArea>
    </p>
    <button type="submit" onclick="@MotarAuth()">Submit</button>
</EditForm>

@code {
    private ILogger Logger { get; }

    private Models.Login model = new Models.Login();
    private string MotarApi = "https://sandbox.motar.io/oauth/signin?response_type=code" +
        "&client_id=iok-cid-1f4b249e90ac6cae2ce6a01480e27241db659767d1e99de5" +
        "&redirect_uri=https://qvxauth.azurewebsites.net/motarlogin&state=NONCE";

    private string vxapi = "https://dev-api.quantuminterface.com/v1/qivxdeviceauthcode/";

    private string motarres = "";
    private string vxres = "";

    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var code))
        {

            motarres = code.ToString();

            //Console.WriteLine($"The response is {motarres}");
            Logger.LogInformation($"The response is {motarres}");
        }
    }

    protected async Task MotarAuth()
    {
        WebClient client = new WebClient();

        vxres = await client.getData(vxapi + motarres);

        Logger.LogInformation($"VxApi: {vxapi}");
        Logger.LogInformation($"Token from VxApi is {vxres}");

        //Console.WriteLine("Token from VxApi = " + vxres);
    }


}
